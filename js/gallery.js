var PointQuadTree=function(){"use strict";function t(t,i,s,h){this.x=t,this.y=i,this.w=s,this.h=h,this.points=[],this.children=null}function i(i,s,h,n,r){this.root=new t(i,s,h,n),this.maxPoints=r}return t.prototype={containsPoint:function(t){return t.x>=this.x&&t.x<=this.x+this.w&&t.y>=this.y&&t.y<=this.y+this.h},overlaps:function(t){return t.x<this.x+this.w&&t.x+t.w>this.x&&t.y<this.y+this.h&&t.y+t.h>this.y},insert:function(t,i){if(null!=this.children){var s=t.x>this.x+this.w/2,h=t.y>this.y+this.h/2;this.children[s+2*h].insert(t,1.1*i)}else this.points.push(t),this.points.length>i&&this.w>1&&this.split(i)},some:function(i,s){if(null!=this.children)for(var h=0;h<this.children.length;++h){var n=this.children[h];if(n.overlaps(i)&&n.some(i,s))return!0}else for(h=0;h<this.points.length;++h){var r=this.points[h];if(t.prototype.containsPoint.call(i,r)&&s(r))return!0}return!1},split:function(i){this.children=[];for(var s=this.w/2,h=this.h/2,n=0;n<2;++n)for(var r=0;r<2;++r){var o=this.x+r*s,e=this.y+n*h;this.children.push(new t(o,e,s,h))}var l=this.points;this.points=[];for(var c=this.x+s,u=this.y+h,a=0;a<l.length;++a){var f=l[a],p=f.x>c,y=f.y>u;this.children[p+2*y].insert(f,1.1*i)}},clear:function(){if(null!=this.children){for(var t=0;t<4;++t)this.children[t].clear();this.children.length=0,this.children=null}this.points.length=0,this.points=null}},i.prototype={clear:function(){this.root.clear()},insert:function(t){this.root.containsPoint(t)&&this.root.insert(t,this.maxPoints)},some:function(t,i){return this.root.some(t,i)}},i}();